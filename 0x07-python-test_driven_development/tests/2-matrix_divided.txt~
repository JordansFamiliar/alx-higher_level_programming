Test the matrix_divided function:

The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

>>> matrix_divided([[0, 0, 0], [0, 0, 0]], 1)
[[0, 0, 0], [0, 0, 0]]

>>> matrix_divided([[10, 20, 30], [40, 50, 60]], 10)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix_divided([[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]], 0.5)
[[3.0, 5.0, 7.0], [9.0, 11.0, 13.0]]

>>> matrix_divided([[1]], 1)
[[1]]

>>> try:
...     matrix_divided([[1, 2], [3, 4, 5]], 2)
... except TypeError as e:
...     str(e)
'Each row of the matrix must have the same size'

>>> try:
...     matrix_divided([[1, 2], [3, 4]], "2")
... except TypeError as e:
...     str(e)
'div must be a number'

>>> try:
...     matrix_divided(None, 2)
... except TypeError as e:
...     str(e)
'matrix must be a matrix (list of lists) of integers/floats'

>>> try:
...     matrix_divided([[1, 2], [3, 4]], 0)
... except ZeroDivisionError as e:
...     str(e)
'division by zero'
